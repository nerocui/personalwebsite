{"version":3,"sources":["reducers/repoReducer.js","reducers/eventReducer.js","reducers/index.js","serviceWorker.js","ui/components/header.jsx","ui/components/starIcon.jsx","ui/components/forkIcon.jsx","ui/components/githubRepoCard.jsx","ui/containers/githubListContainer.jsx","ui/containers/repoList.jsx","ui/components/events/commitCommentEvent.jsx","ui/components/events/createEvent.jsx","ui/components/events/deleteEvent.jsx","ui/components/events/forkEvent.jsx","ui/components/events/gollumEvent.jsx","ui/components/events/issueCommentEvent.jsx","ui/components/events/issuesEvent.jsx","ui/components/events/memberEvent.jsx","ui/components/events/publicEvent.jsx","ui/components/events/pullRequestEvent.jsx","ui/components/events/pullRequestReviewCommentEvent.jsx","ui/components/events/pushEvent.jsx","ui/components/events/releaseEvent.jsx","ui/components/events/sponsorshipEvent.jsx","ui/components/events/watchEvent.jsx","ui/components/events/genericEvent.jsx","ui/components/githubEventCard.jsx","ui/containers/eventList.jsx","ui/containers/githubContainer.jsx","ui/containers/dashboard.jsx","action/index.js","ui/pages/homePage.jsx","index.js"],"names":["initialState","items","rootReducer","combineReducers","repoReducer","state","action","type","Object","assign","payload","eventReducer","Boolean","window","location","hostname","match","Header","props","className","map","item","title","SVG","width","height","viewBox","xmlns","this","d","fill","fillRule","React","Component","GitHubRepoCard","name","description","html_url","language","stargazers_count","forks","fork","href","target","GitHubListContainer","slidePrevPage","currentIndex","setState","slideNextPage","handleOnSlideChange","event","itemsInSlide","Card","ChildCard","responsive","0","780","1240","galleryItems","onDragStart","e","preventDefault","nextProps","leftOptions","loop","autoplay","animationData","leftData","rightOptions","rightData","onClick","options","isStopped","isPaused","buttonsDisabled","dotsDisabled","slideToIndex","onSlideChanged","onResized","connect","CommitCommentEvent","repo","comment","body","ref_type","ref","forkee","full_name","pages","page","page_name","issue","changes","assignee","label","member","login","number","pull_request","push_id","size","distinct_size","head","before","commits","release","effective_date","EVENT_TYPE","GetEvents","GitHubEventCard","GitHubContainer","useState","selectedTab","setSelectedTab","getRepos","dispatch","axios","get","then","data","catch","console","log","getEvents","defaultOptions","id","headerItems","external","link","HomePage","store","applyMiddleware","ReduxPromise","ReduxThunk","createStore","createStoreWithMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.34d0e076.chunk.js","sourcesContent":["\nconst initialState = {\n    items: []\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_REPOS':\n            return Object.assign({}, state, { items: action.payload });\n        default:\n\t\t\treturn state;\n\t}\n};","\n\nconst initialState = {\n    items: []\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_EVENTS':\n            return Object.assign({}, state, { items: action.payload });\n        default:\n\t\t\treturn state;\n\t}\n};","import { combineReducers } from \"redux\";\nimport repoReducer from './repoReducer';\nimport eventReducer from './eventReducer';\n\nconst rootReducer = combineReducers({\n    repoReducer,\n    eventReducer,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport '../styles/header.scss';\n\nconst Header = props => {\n    return (\n        <div className=\"header-container\">\n            <div className=\"headers\">\n                {\n                    props.items.map(item => {\n                        return (\n                            <div className=\"header-item-container\">\n                                {item.title}\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nexport default class SVG extends React.Component {\n  render() {\n    return <svg width=\"14\" height=\"21\" viewBox=\"0 -3 14 21\" xmlns=\"http://www.w3.org/2000/svg\" {...this.props}><title>star</title><path d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z\" fill={this.props.fill} fillRule=\"evenodd\" /></svg>;\n  }\n}","import React from \"react\";\nexport default class SVG extends React.Component {\n  render() {\n    return <svg width=\"14\" height=\"21\" viewBox=\"0 -3 14 21\" xmlns=\"http://www.w3.org/2000/svg\" {...this.props}><title>star</title><path d=\"M 8 1 a 1.993 1.993 0 0 0 -1 3.72 V 6 L 5 8 L 3 6 V 4.72 A 1.993 1.993 0 0 0 2 1 a 1.993 1.993 0 0 0 -1 3.72 V 6.5 l 3 3 v 1.78 A 1.993 1.993 0 0 0 5 15 a 1.993 1.993 0 0 0 1 -3.72 V 9.5 l 3 -3 V 4.72 A 1.993 1.993 0 0 0 8 1 Z M 2 4.2 C 1.34 4.2 0.8 3.65 0.8 3 c 0 -0.65 0.55 -1.2 1.2 -1.2 c 0.65 0 1.2 0.55 1.2 1.2 c 0 0.65 -0.55 1.2 -1.2 1.2 Z m 3 10 c -0.66 0 -1.2 -0.55 -1.2 -1.2 c 0 -0.65 0.55 -1.2 1.2 -1.2 c 0.65 0 1.2 0.55 1.2 1.2 c 0 0.65 -0.55 1.2 -1.2 1.2 Z m 3 -10 c -0.66 0 -1.2 -0.55 -1.2 -1.2 c 0 -0.65 0.55 -1.2 1.2 -1.2 c 0.65 0 1.2 0.55 1.2 1.2 c 0 0.65 -0.55 1.2 -1.2 1.2 Z\" fill={this.props.fill} fillRule=\"evenodd\" /></svg>;\n  }\n}","import React from 'react';\nimport '../styles/repoCard.scss';\nimport StarIcon from './starIcon';\nimport ForkIcon from './forkIcon';\n\nconst GitHubRepoCard = ({name, description, html_url, language, stargazers_count, forks, fork }) => {\n    return (\n        <div className=\"github-repo-card\">\n            <div>\n                <h3>\n                    <a href={html_url}>{name}{fork ? \"(forked)\" : \"\"}</a>\n                </h3>\n                <p>{description ? description : 'No description provided'}</p>\n            </div>\n            <div>\n                <div className=\"properties\">\n                    <div>\n                        <div className=\"counts\">\n                            <a className=\"count\" href={html_url} target=\"_blank\">\n                                <div className=\"property\">\n                                    <StarIcon fill=\"white\" className=\"property-item\"/>\n                                    <p className=\"property-item\">{stargazers_count}</p>\n                                </div>\n                            </a>\n                            <a className=\"count\" href={html_url} target=\"_blank\">\n                                <div className=\"property\">\n                                    <ForkIcon fill=\"white\" className=\"property-item\"/>\n                                    <p className=\"property-item\">{forks}</p>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                    {language ? <p className=\"language\">{language}</p> : ''}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default GitHubRepoCard;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport GitHubRepoCard from '../components/githubRepoCard';\nimport '../styles/repoList.scss';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport Lottie from 'react-lottie';\nimport leftData from '../data/left.json';\nimport rightData from '../data/right.json';\n\nclass GitHubListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        const Card = props.ChildCard;\n        this.state = {\n            currentIndex: 0,\n            itemsInSlide: 1,\n            responsive: {\n                0: { items: 1 },\n                780: { items: 2 },\n                1240: { items: 3 },\n            },\n            items: props.items,\n            galleryItems: props.items.map(item => <Card onDragStart={(e) => e.preventDefault()} {...item}/>),\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        if (nextProps.items !== this.state.items) {\n            this.setState({ items: nextProps.items, galleryItems: nextProps.items.map(item => <GitHubRepoCard onDragStart={(e) => e.preventDefault()} {...item}/>) })\n        }\n    }\n\n    slidePrevPage = () => {\n        const currentIndex = this.state.currentIndex - 1;\n        this.setState({ currentIndex })\n    }\n\n    slideNextPage = () => {\n        let currentIndex = this.state.currentIndex + 1;\n        this.setState({ currentIndex });\n    }\n\n    handleOnSlideChange = (event) => {\n        const { itemsInSlide, item } = event\n        this.setState({ itemsInSlide, currentIndex: item })\n    }\n\n    render() {\n        const { currentIndex, galleryItems, responsive } = this.state;\n        const leftOptions = {\n            loop: true,\n            autoplay: true, \n            animationData: leftData,\n        };\n        const rightOptions = {\n            loop: true,\n            autoplay: true, \n            animationData: rightData,\n        };\n        return (\n            <div className=\"carousel-container\">\n                <div className=\"carousel-btn\" onClick={this.slidePrevPage}>\n                    <Lottie options={leftOptions} isStopped={false} isPaused={false}/>\n                </div>\n                <div className=\"alice-carousel-container\">\n                    <AliceCarousel\n                        buttonsDisabled\n                        dotsDisabled\n                        items={galleryItems}\n                        slideToIndex={currentIndex}\n                        responsive={responsive}\n                        onSlideChanged={this.handleOnSlideChange}\n                        onResized={this.handleOnSlideChange}\n                    />\n                </div>\n                <div className=\"carousel-btn\" onClick={this.slideNextPage}>\n                    <Lottie options={rightOptions} isStopped={false} isPaused={false}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GitHubListContainer;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport GitHubRepoCard from '../components/githubRepoCard';\nimport '../styles/repoList.scss';\nimport GitHubListContainer from './githubListContainer';\n\n\nconst RepoList = ({ items }) => {\n    return <GitHubListContainer items={items} ChildCard={GitHubRepoCard}/>\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.repoReducer.items,\n    };\n}\n\nexport default connect(mapStateToProps)(RepoList);\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, comment } = payload;\n    return (\n        <div>\n            <span>\n                <h3>{action}</h3>\n                <h3>{comment.body}</h3>\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { ref, ref_type, description } = payload;\n    return (\n        <div>\n            <span>\n                <a href={`https://github.com/${repo.name}`}>\n                    <p>\n                        Created {ref_type}\n                    </p>\n                </a>\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { ref_type } = payload;\n    return (\n        <div>\n            <span>\n                <h2>Deleted {ref_type} {repo.name}</h2>\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { forkee } = payload;\n    return (\n        <div>\n            <span>\n                <p>\n                    Forked {forkee.full_name} from {repo.name}\n                </p>\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { pages } = payload;\n    return (\n        <div>\n            <span>\n                <h2>\n                    Updated {pages.map(page => <span>{page.page_name}</span>)}\n                </h2>\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, changes, issue, comment } = payload;\n    return (\n        <div>\n            <span>{action} comment in issue {issue.title} in {repo.name}</span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, issue, changes, assignee, label } = payload;\n    return (\n        <div>\n            <span>\n                {action} issue: {issue.body}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, member, changes } = payload;\n    return (\n        <div>\n            <span>\n                {action} user: {member.login}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    return (\n        <div>\n            <span>\n                Made repo {repo.name} public\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, number, changes, pull_request } = payload;\n    return (\n        <div>\n            {action} pull request in {repo.name}\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, changes, pull_request, comment } = payload;\n    return (\n        <div>\n            <span>\n                {action} pull request in {repo.name}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { push_id, size, distinct_size, ref, head, before, commits } = payload;\n    return (\n        <div>\n            <span>\n                Pushed to {ref} in {repo.name}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, changes, release } = payload;\n    return (\n        <div>\n            <span>\n                {action} in {repo.name}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action, effective_date, changes } = payload;\n    return (\n        <div>\n            <span>\n                {action} in {repo.name}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    const { action } = payload;\n    return (\n        <div>\n            <span>\n                {action} {repo.name}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\n\n\nconst CommitCommentEvent = ({repo, payload}) => {\n    return (\n        <div>\n            <span>\n                event happend in {repo.name}\n            </span>\n        </div>\n    );\n};\n\n\n\nexport default CommitCommentEvent;\n","import React from 'react';\nimport CommitCommentEvent from './events/commitCommentEvent';\nimport CreateEvent from './events/createEvent';\nimport DeleteEvent from './events/deleteEvent';\nimport ForkEvent from './events/forkEvent';\nimport GollumEvent from './events/gollumEvent';\nimport IssueCommentEvent from './events/issueCommentEvent';\nimport IssuesEvent from './events/issuesEvent';\nimport MemberEvent from './events/memberEvent';\nimport PublicEvent from './events/publicEvent';\nimport PullRequestEvent from './events/pullRequestEvent';\nimport PullRequestReviewCommentEvent from './events/pullRequestReviewCommentEvent';\nimport PushEvent from './events/pushEvent';\nimport ReleaseEvent from './events/releaseEvent';\nimport SponsorshipEvent from './events/sponsorshipEvent';\nimport WatchEvent from './events/watchEvent';\nimport GenericEvent from './events/genericEvent';\nimport '../styles/eventCard.scss';\n\nconst EVENT_TYPE = {\n    CommitCommentEvent: 'CommitCommentEvent',\n    CreateEvent: 'CreateEvent',\n    DeleteEvent: 'DeleteEvent',\n    ForkEvent: 'ForkEvent',\n    GollumEvent: 'GollumEvent',\n    IssueCommentEvent: 'IssueCommentEvent',\n    IssuesEvent: 'IssuesEvent',\n    MemberEvent: 'MemberEvent',\n    PublicEvent: 'PublicEvent',\n    PullRequestEvent: 'PullRequestEvent',\n    PullRequestReviewCommentEvent: 'PullRequestReviewCommentEvent',\n    PushEvent: 'PushEvent',\n    ReleaseEvent: 'ReleaseEvent',\n    SponsorshipEvent: 'SponsorshipEvent',\n    WatchEvent: 'WatchEvent',\n};\n\nconst GitHubEventCard = props => {\n    return (\n        <div className=\"github-event-card\">\n            {GetEvents(props)}\n        </div>\n    );\n};\n\nconst GetEvents = ({type, repo, payload}) => {\n    switch (type) {\n        case EVENT_TYPE.CommitCommentEvent: \n            return <CommitCommentEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.CreateEvent: \n            return <CreateEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.DeleteEvent: \n            return <DeleteEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.ForkEvent: \n            return <ForkEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.GollumEvent: \n            return <GollumEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.IssueCommentEvent: \n            return <IssueCommentEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.IssuesEvent: \n            return <IssuesEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.MemberEvent: \n            return <MemberEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.PublicEvent: \n            return <PublicEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.PullRequestEvent: \n            return <PullRequestEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.PullRequestReviewCommentEvent: \n            return <PullRequestReviewCommentEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.PushEvent: \n            return <PushEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.ReleaseEvent: \n            return <ReleaseEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.SponsorshipEvent: \n            return <SponsorshipEvent repo={repo} payload={payload} />\n        case EVENT_TYPE.WatchEvent: \n            return <WatchEvent repo={repo} payload={payload} />\n        default:\n            return <GenericEvent repo={repo} payload={payload} />\n    }\n};\n\nexport default GitHubEventCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GitHubEventCard from '../components/githubEventCard';\nimport '../styles/eventList.scss';\nimport GitHubListContainer from './githubListContainer';\n\nconst EventList = ({ items }) => {\n    return <GitHubListContainer items={items} ChildCard={GitHubEventCard}/>\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.eventReducer.items,\n    };\n}\n\nexport default connect(mapStateToProps)(EventList);\n","import React, { useState } from 'react';\nimport RepoList from './repoList';\nimport EventList from './eventList';\n\nconst GitHubContainer = () => {\n    const [ selectedTab, setSelectedTab ] = useState('repo');\n    return (\n        <div className=\"github-list-container\">\n            <div className=\"tab-container\">\n                <div className=\"tabs\">\n                    <div className={selectedTab === 'repo'? 'tab selected' : 'tab'} onClick={() => setSelectedTab('repo')}>\n                        <h1>Repositories</h1>\n                    </div>\n                    <div className={selectedTab === 'event'? 'tab selected' : 'tab'} onClick={() => setSelectedTab('event')}>\n                        <h1>\n                            Activities\n                        </h1>\n                    </div>\n                </div>\n            </div>\n            <div className=\"github-list-window\">\n                {\n                    selectedTab === 'repo' ?\n                    <RepoList />\n                    :\n                    <EventList />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default GitHubContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getRepos, getEvents } from '../../action';\nimport RepoList from './repoList';\nimport '../styles/dashboard.scss';\nimport GitHubContainer from './githubContainer';\nimport Lottie from 'react-lottie';\nimport animationData from '../data/code.json';\n\nconst Dashboard = ({ getRepos, getEvents }) => {\n    getRepos();\n    getEvents();\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: animationData,\n    };\n    return (\n        <div className=\"dashboard\">\n            <div className=\"container\">\n                <section id=\"github-section\">\n                    <div className=\"title-container\">\n                        <div className=\"title-item\">\n                            <h1>I'm Active on GitHub</h1>\n                            <Lottie options={defaultOptions} height={400} width={400}/>\n                        </div>\n                    </div>\n                    <GitHubContainer />\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { getRepos, getEvents })(Dashboard);\n","import axios from 'axios';\n\nconst githubUserRepoApi = 'https://api.github.com/users/nerocui/repos?page=1&per_page=100';\nconst githubUserEventsApi = 'https://api.github.com/users/nerocui/events';\n\nfunction dispatchRepos(repos) {\n    return {\n        payload: repos,\n        type: 'SET_REPOS',\n    };\n}\n\n\nfunction dispatchEvents(events) {\n    return {\n        payload: events,\n        type: 'SET_EVENTS',\n    };\n}\n\nexport function getRepos() {\n    return dispatch => {\n        axios.get(githubUserRepoApi)\n            .then(({data}) => dispatch(dispatchRepos(data)))\n            .catch(e => console.log('Failed to get repos.', e))\n    };\n}\n\nexport function getEvents() {\n    return dispatch => {\n        axios.get(githubUserEventsApi)\n            .then(({data}) => dispatch(dispatchEvents(data)))\n            .catch(e => console.log('Failed to get events.', e))\n    };\n}\n","import React from 'react';\nimport Header from '../components/header';\nimport Dashboard from '../containers/dashboard';\n\nconst headerItems = [\n    {\n        title: 'Blog',\n        external: true,\n        link: 'https://nerocui.com',\n    },\n    {\n        title: 'Projects',\n        external: false,\n        link: '/projects',\n    },\n    {\n        title: 'About',\n        external: false,\n        link: '/about',\n    }\n];\n\nconst HomePage = () => {\n    return (\n        <div className=\"page-container\">\n            <Header items={headerItems}/>\n            <Dashboard />\n        </div>\n    );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { applyMiddleware, createStore } from 'redux';\nimport ReduxPromise from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport HomePage from './ui/pages/homePage';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise, ReduxThunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer,{});\n\nReactDOM.render(\n  <Provider store={store}>\n    <HomePage />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}